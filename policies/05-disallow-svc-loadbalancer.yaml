---
# Source: kyverno/templates/05-disallow-svc-loadbalancer.yaml
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restrict-loadbalancer-service
  annotations:
    policies.kyverno.io/title: Disallow Service Type LoadBalancer
    policies.kyverno.io/category: Sample
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Service
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      Especially in cloud provider environments, a Service having type LoadBalancer will cause the
      provider to respond by creating a load balancer somewhere in the customer account. This adds
      cost and complexity to a deployment. Without restricting this ability, users may easily
      overrun established budgets and security practices set by the organization. This policy restricts
      use of the Service type LoadBalancer.
spec:
  validationFailureAction: Enforce
  background: false
  rules:
  - name: validate-loadbalancer
    match:
      any:
      - resources:
          kinds:
          - Service
    preconditions:
      any:
      - key: "{{ request.operation }}"
        operator: NotEquals
        value: DELETE
    exclude:
      resources:
        namespaces:
        - argocd-system
        - cert-manager
        - elastic-system
        - events-exporter
        - external-dns
        - gatekeeper-system
        - gitlab-runner
        - istio-*
        - jaeger-prod
        - kafka-system
        - keda
        - kube-*
        - kubecost
        - kubecost-mgmt
        - kyverno
        - kubecost
        - kubecost-*
        - logging
        - monitoring-prod
        - oauth2-proxy-system
        - path-router-operator-system
        - recut
        - elastic-dev
        - vault-system
        - velero-prod
        - k8ssandra-operator
        - temporal-operator
        - cloud-temporal-*
        - cassandra
        - cassandra-tls
        - temporal
        - data-kafka-*
        - shared-kafka-*
        - trivy-system-*
        - sentry-mgmt
    validate:
      message: "Services of type {{ request.object.spec.type }} are not allowed."
      pattern:
        spec:
          type: "!LoadBalancer"
