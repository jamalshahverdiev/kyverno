apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restart-statefulset-on-secret-change
  annotations:
    policies.kyverno.io/title: Restart StatefulSet On Secret Change
    policies.kyverno.io/category: other
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: StatefulSet
    kyverno.io/kyverno-version: 1.10.0
    policies.kyverno.io/minversion: 1.10.0
    kyverno.io/kubernetes-version: "1.25.5"
    policies.kyverno.io/description: >-
      If Secrets are mounted in ways which do not naturally allow updates to
      be live refreshed it may be necessary to modify a StatefulSet. This policy
      watches a Secret and if it changes will write an annotation
      to one or more target StatefulSets thus triggering a new rollout and thereby
      refreshing the referred Secret. It may be necessary to grant additional privileges
      to the Kyverno ServiceAccount, via one of the existing ClusterRoleBindings or a new
      one, so it can modify StatefulSets.
spec:
  mutateExistingOnPolicyUpdate: true
  rules:                  
  - name: update-secret-in-statefulset
    match:
      any:
      - resources:
          kinds:
          - Secret
    preconditions:
      all:
      - key: "{{request.operation}}"
        operator: Equals
        value: UPDATE
      - key: "{{request.object.metadata.ownerReferences[0].kind}}"
        operator: Equals
        value: StatefulSet
      - key: '{{request.object.metadata.annotations."kyverno.opso.info/read"}}'
        operator: Equals
        value: allow
      - key: "{{ equal_fold('{{request.object.data}}', '{{request.oldObject.data}}') }}"
        operator: NotEquals
        value: true
    mutate:
      targets:
        - apiVersion: apps/v1
          kind: StatefulSet
          name: "{{ request.object.metadata.ownerReferences[0].name }}"
          namespace: "{{ request.object.metadata.namespace }}"
      patchStrategicMerge:
        spec:
          template:
            metadata:
              annotations:
                kyverno.opso.info/secretversion: "{{request.object.metadata.resourceVersion}}"

