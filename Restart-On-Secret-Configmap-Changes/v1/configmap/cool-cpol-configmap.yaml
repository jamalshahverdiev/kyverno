apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  annotations:
    kyverno.io/kubernetes-version: "1.26"
    kyverno.io/kyverno-version: 1.11.1
    policies.kyverno.io/category: other
    policies.kyverno.io/description: If Configmaps are mounted in ways which do not naturally
      allow updates to be live refreshed it may be necessary to modify a Deployment/Daemonset/Statefulset.
      This policy watches a Configmap and if it changes will write an annotation to one
      or more target Deployment/Daemonset/Statefulset thus triggering a new rollout and thereby refreshing
      the referred Configmap. It may be necessary to grant additional privileges to the
      Kyverno ServiceAccount, via one of the existing ClusterRoleBindings or a new
      one, so it can modify Deployment/Daemonset/Statefulset.
    policies.kyverno.io/minversion: 1.11.1
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Deployment/Daemonset/Statefulset
    policies.kyverno.io/title: Restart objects On Configmap Change
  labels:
    opso.lan/argocd: kyverno-dt-dev-euc1-infra
  name: restart-on-configmap-change
spec:
  background: false
  mutateExistingOnPolicyUpdate: false
  rules:
  - match:
      any:
      - resources:
          kinds:
          - ConfigMap
    mutate:
      patchStrategicMerge:
        spec:
          template:
            metadata:
              annotations:
                kyverno.opso.lan/configmapversion: '{{request.object.metadata.resourceVersion}}'
      targets:
        - apiVersion: apps/v1
          kind: Deployment
          namespace: '{{request.object.metadata.namespace}}'
          preconditions:
            all:
            - key: "{{ lookup(target.metadata.annotations, 'kyverno.opso.lan/configmap_dorollout') }}"
              operator: Equals
              value: "allow"
        - apiVersion: apps/v1
          kind: DaemonSet
          namespace: '{{request.object.metadata.namespace}}'
          preconditions:
            all:
            - key: "{{ lookup(target.metadata.annotations, 'kyverno.opso.lan/configmap_dorollout') }}"
              operator: Equals
              value: "allow"
        - apiVersion: apps/v1
          kind: StatefulSet
          namespace: '{{request.object.metadata.namespace}}'
          preconditions:
            all:
            - key: "{{ lookup(target.metadata.annotations, 'kyverno.opso.lan/configmap_dorollout') }}"
              operator: Equals
              value: "allow"
    name: configmap-updated
    preconditions:
      all:
      - key: '{{request.operation}}'
        operator: Equals
        value: UPDATE
      - key: '{{request.object.metadata.annotations."kyverno.opso.lan/read"}}'
        operator: Equals
        value: "allow"
      - key: "{{equal_fold('{{request.object.data}}', '{{request.oldObject.data}}')}}"
        operator: NotEquals
        value: true
  validationFailureAction: Audit
